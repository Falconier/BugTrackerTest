<!-- localhost:_____/Tickets/Details/_____ -->
@model BugTrackerTest.Models.TicketDetailsViewModel

<div class="box no-padding">
    <!-- Box Header -->
    <div class=" box-header">
        <h3>@Model.ticket.Title</h3>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div style="padding-left:15px;">
                <div class="col-md-4">
                    <b>Priority: </b>@if (Model.ticket.Priority.Name.Equals("Urgent"))
                    {
                        <p class="text-bold text-danger">@Model.ticket.Priority.Name</p>
                    }
                    else if (Model.ticket.Priority.Name.Equals("High"))
                    {
                        <p class="text-bold text-warning">@Model.ticket.Priority.Name</p>
                    }
                    else
                    {
                        <p>@Model.ticket.Priority.Name</p>
                    }
                    <b>Status: </b><p>@Model.ticket.TicketStatus.Name</p>
                </div>
                <div class="col-md-4">
                    <b>Associated Project: </b><p>@Model.ticket.Project.Name</p>
                    <b>Assigned To: </b>@if (Model.ticket.AssignedToUser == null)
                    {
                        <p class="text-bold text-danger">Unassigned</p>
                    }
                    else
                    {
                        <p>@Model.ticket.AssignedToUser.FullName</p>
                    }
                </div>
                <div class="col-md-4">
                    <b>Ticket Owner: </b>
                    @if (Model.ticket.OwnerUser == null)
                    {
                        <p class="text-bold text-danger">SEEDED</p>
                    }
                    else
                    {
                        <p>@Model.ticket.OwnerUser.FullName</p>
                    }
                    <b>Created On: </b>
                    @if (Model.ticket.OwnerUser == null)
                    {
                        <p class="text-bold text-danger">SEEDED</p>
                    }
                    else
                    {
                        <b>Created On: </b><p>@Model.ticket.Created.ToString("ddd, dd MMM yyy HH:mm")</p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div style="padding-left:15px;">
                <div class="col-md-12">
                    <b>Description: </b>
                    <p>@Html.Raw(Model.ticket.Description)</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <b>Comments: </b>
        @using (Html.BeginForm("AddComment", "Tickets", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Comment.TicketId)

            @Html.TextAreaFor(model => model.Comment.Body, new { @class = "form-control", rows = 12, @id = "cbody" })


            <button type="submit" class="btn btn-success" style="margin-top:15px; margin-bottom:15px;">Add Comment</button>
        }

        @foreach (var comment in Model.ticket.Comments.OrderByDescending(c => c.Created))
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <b>Created by: </b><p>@comment.User.FirstName</p>
                            <b>Date: </b><p>@comment.Created.ToString("ddd, dd MMM yyy HH:mm")</p>
                        </div>
                        <div class="panel-body">
                            @Html.Raw(comment.Body)
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
    <div class="col-md-6">
        <b>Attachments: </b>
        @using (Html.BeginForm("AddAttachments", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Attachment.TicketId)

            @Html.TextAreaFor(model => model.Attachment.Description, new { @class = "form-control", rows = 12, @id = "abody" })

            <input name="image" type="file" class="form-control" id="fileUpload" />

            <button type="submit" class="btn btn-success" style="margin-top:15px; margin-bottom:15px;">Add Attachment</button>
        }
        @foreach (var att in Model.ticket.Attachments.OrderByDescending(c => c.Created))
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <b>Created by: </b><p>@att.User.FirstName</p>
                            <b>Date: </b><p>@att.Created.ToString("ddd, dd MMM yyy HH:mm")</p>
                        </div>
                        <div class="panel-body">
                            @if (att.FileUrl != null)
                            {
                                if (att.FileUrl.Contains(".jpg"))
                                {
                                    <img class="img-responsive"  src="@Url.Content(att.FileUrl)" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else if (att.FileUrl.Contains(".jpeg"))
                                {
                                    <img class="img-responsive"  src="@Url.Content(att.FileUrl)" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else if (att.FileUrl.Contains(".gif"))
                                {
                                    <img class="img-responsive"  src="@Url.Content(att.FileUrl)" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else if (att.FileUrl.Contains(".png"))
                                {
                                    <img class="img-responsive"  src="@Url.Content(att.FileUrl)" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else if (att.FileUrl.Contains(".bmp"))
                                {
                                    <img class="img-responsive"  src="@Url.Content(att.FileUrl)" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else if (att.FileUrl.Contains(".pdf"))
                                {
                                    <img class="img-responsive" src="@att.FileUrl" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else if (att.FileUrl.Contains(".xls"))
                                {
                                    <img class="img-responsive"  src="~/Uploads/XLS File Extension.png" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>
                                }
                                else
                                {
                                    <img class="img-responsive" src="~/Uploads/DOC File Extension.png" alt="" />
                                    <a href=@Url.Action("Download", "TicketAttachments", new { ImageName = att.FileUrl })><i class="dripicons-download"></i></a>

                                }
                            }

                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
</div>


<!-- Histories -->
<div class="col-md-12">
    <div class="row">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title col-md-6">History and Changes</h3><h3 class="col-md-4"></h3><h3 class="outline outline-primary">Test</h3>
            </div>
            <div class="box-body">
                @if (Model.ticket.Histories.ToList().Count != 0)
                {
                    <table id="header" class=" table table-bordered table-striped">
                        <thead>
                            <tr>
                                <td class="text-bold">
                                    Property
                                </td>
                                <td class="text-bold">
                                    Old Value
                                </td>
                                <td class="text-bold">
                                    New Value
                                </td>
                                <td class="text-bold">
                                    Changed On..
                                </td>
                                <td class="text-bold">
                                    Changed By..
                                </td>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var history in Model.ticket.Histories.Take(5))
                            {
                                <tr>
                                    <td>
                                        @history.Property
                                    </td>
                                    <td>
                                        @history.OldVal
                                    </td>
                                    <td>
                                        @history.NewVal
                                    </td>
                                    <td>
                                        @history.Changed.ToString("ddd, dd MMM yy HH:mm")
                                    </td>
                                    <td>
                                        @history.User.FirstName
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-center text-bold text-black">No Changes Have Been Made</p>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#cbody'
            })
        })
        $(function () {
            tinymce.init({
                selector: '#abody'
            })
        })
    </script>
}